syntax = "proto2";
option optimize_for = LITE_RUNTIME;

package resin_worker;

message Message {

  enum MessageType {
    WORKER_STATUS = 0;
    TASK_STATUS = 1;
  }
  required MessageType message_type = 1;

  message WorkerStatus {
    required string worker_id = 1;
    required uint32 cpu_count = 2;
    required string region = 3;
  }
  optional WorkerStatus worker_status = 2;

  message TaskStatus {
    required string worker_id = 1;
    required string task_id = 2;
    required uint32 cpu_count = 3;
    required float completed = 4;
    optional uint32 completed_items = 5;
    required bool complete = 6;
    optional bool success = 7;
    optional float duration = 8;
    optional string message = 9;
  }
  optional TaskStatus task_status = 3;

  // whenever a TaskStatus is sent with
  // 'complete' as true, the receiver 
  // sends a TaskStatusAck back to the 
  // caller
  message TaskStatusAck {
    required string task_id = 1;
  }
  optional TaskStatusAck task_status_ack = 4;
}
